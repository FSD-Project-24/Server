<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/tw-elements/dist/css/tw-elements.min.css"
    />
    <script src="https://cdn.tailwindcss.com/3.3.0"></script>
    <style>
      .create-post-form {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }
    </style>
  </head>
  <body>
    <div class="create-post-form flex top-10">
      <div
        class="mx-auto block max-w-md rounded-lg bg-white p-6 shadow-4 dark:bg-surface-dark"
      >
        <form method="post" action="/api/posts/create" id="create-post-form">
          <!--Community input-->
          <div class="relative mb-6" data-twe-input-wrapper-init>
            <input
              type="text"
              class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary data-[twe-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-black dark:placeholder:text-neutral-300 dark:autofill:shadow-autofill dark:peer-focus:text-primary [&:not([data-twe-input-placeholder-active])]:placeholder:opacity-0"
              id="community"
              name="community"
              placeholder="Community Name"
            />
            <label
              for="community"
              class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[twe-input-state-active]:-translate-y-[0.9rem] peer-data-[twe-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-300 dark:peer-focus:text-primary"
              >Community
            </label>
          </div>

          <!--Community input-->
          <div class="relative mb-6" data-twe-input-wrapper-init>
            <input
              type="text"
              class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary data-[twe-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-black dark:placeholder:text-neutral-300 dark:autofill:shadow-autofill dark:peer-focus:text-primary [&:not([data-twe-input-placeholder-active])]:placeholder:opacity-0"
              id="title"
              name="title"
              placeholder="Title"
            />
            <label
              for="title"
              class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[twe-input-state-active]:-translate-y-[0.9rem] peer-data-[twe-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-300 dark:peer-focus:text-primary"
              >Title
            </label>
          </div>
          <!--Message textarea-->
          <div class="relative mb-6" data-twe-input-wrapper-init>
            <textarea
              class="peer block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary data-[twe-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none dark:text-black dark:placeholder:text-neutral-300 dark:peer-focus:text-primary [&:not([data-twe-input-placeholder-active])]:placeholder:opacity-0"
              id="content"
              name="content"
              rows="3"
              placeholder="Think something usefull to write...."
            ></textarea>
            <label
              for="content"
              class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[twe-input-state-active]:-translate-y-[0.9rem] peer-data-[twe-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-300 dark:peer-focus:text-primary"
              >Think something usefull to write....
            </label>
          </div>

          <!--Submit button-->
          <button
            id="create-post-btn"
            type="submit"
            class="inline-block w-full rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-black shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:bg-primary-dark dark:hover:bg-primary-dark-accent dark:shadow-primary-dark-3 dark:focus:bg-primary-dark-accent dark:focus:shadow-primary-dark-2 dark:focus:outline dark:focus:ring-0 dark:active:bg-primary-dark-600 dark:active:shadow-primary-dark-2"
            data-twe-ripple-init
            data-twe-ripple-color="light"
          >
            Create
          </button>
        </form>
      </div>
    </div>
    <script>
      const submitButton = document.querySelector("#create-post-btn");
      submitButton.addEventListener("click", async (e) => {
        e.preventDefault();
        const postForm = document.querySelector("#create-post-form");
        const formData = new FormData(postForm);
        const formBody = {
          community: formData.get("community"),
          title: formData.get("title"),
          content: formData.get("content"),
        };

        const jwtToken = getCookie("jwt");
        const response = await fetch("/api/posts/create", {
          method: "post",
          headers: {
            "Content-Type": "application/json",
            jwt: jwtToken,
          },
          body: JSON.stringify(formBody),
        });
        if (response.ok) {
          window.location.href = "/discuss/home";
        } else {
          console.error(response.message);
        }
      });

      // Function to get cookie value by name
      function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(";").shift();
      }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/tw-elements/dist/js/tw-elements.umd.min.js"></script>
  </body>
</html>
